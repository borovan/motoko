<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="246" onload="init(evt)" viewBox="0 0 1200 246" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="246.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >assetstorage.mo</text>
<text id="details" x="10.00" y="229" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="229" > </text>
<g id="frames">
<g >
<title>memcpy (59 samples, 0.15%)</title><rect x="639.6" y="117" width="1.8" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="642.61" y="127.5" ></text>
</g>
<g >
<title>anon-func-43.3 (6 samples, 0.02%)</title><rect x="528.9" y="85" width="0.2" height="15.0" fill="rgb(248,164,48)" rx="2" ry="2" />
<text  x="531.90" y="95.5" ></text>
</g>
<g >
<title>__wasm_apply_global_relocs (12 samples, 0.03%)</title><rect x="387.9" y="149" width="0.4" height="15.0" fill="rgb(244,119,43)" rx="2" ry="2" />
<text  x="390.90" y="159.5" ></text>
</g>
<g >
<title>put (811 samples, 2.04%)</title><rect x="723.8" y="149" width="24.1" height="15.0" fill="rgb(234,152,31)" rx="2" ry="2" />
<text  x="726.83" y="159.5" >put</text>
</g>
<g >
<title>all (39,759 samples, 100%)</title><rect x="10.0" y="197" width="1180.0" height="15.0" fill="rgb(255,230,55)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (22 samples, 0.06%)</title><rect x="740.1" y="69" width="0.7" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="743.13" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (22 samples, 0.06%)</title><rect x="728.8" y="101" width="0.6" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="731.76" y="111.5" ></text>
</g>
<g >
<title>@mut_array_size (57 samples, 0.14%)</title><rect x="516.1" y="85" width="1.7" height="15.0" fill="rgb(245,118,44)" rx="2" ry="2" />
<text  x="519.08" y="95.5" ></text>
</g>
<g >
<title>memcpy (60 samples, 0.15%)</title><rect x="634.9" y="101" width="1.7" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="637.86" y="111.5" ></text>
</g>
<g >
<title>alloc_words (42 samples, 0.11%)</title><rect x="661.9" y="101" width="1.3" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="664.92" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (22 samples, 0.06%)</title><rect x="348.0" y="117" width="0.6" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="350.98" y="127.5" ></text>
</g>
<g >
<title>insertRoot (789 samples, 1.98%)</title><rect x="724.5" y="133" width="23.4" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="727.49" y="143.5" >i..</text>
</g>
<g >
<title>opt_project (15 samples, 0.04%)</title><rect x="579.6" y="101" width="0.4" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="582.60" y="111.5" ></text>
</g>
<g >
<title>alloc_words (84 samples, 0.21%)</title><rect x="738.3" y="85" width="2.5" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="741.29" y="95.5" ></text>
</g>
<g >
<title>@deserialize&lt;t&gt; (1,112 samples, 2.80%)</title><rect x="664.1" y="165" width="33.0" height="15.0" fill="rgb(244,176,43)" rx="2" ry="2" />
<text  x="667.12" y="175.5" >@d..</text>
</g>
<g >
<title>obj_idx&lt;0&gt; (17 samples, 0.04%)</title><rect x="663.2" y="149" width="0.5" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="666.17" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::text::text_get_range::h4d5b3d59f2df56d2 (28 samples, 0.07%)</title><rect x="652.7" y="53" width="0.9" height="15.0" fill="rgb(249,127,49)" rx="2" ry="2" />
<text  x="655.72" y="63.5" ></text>
</g>
<g >
<title>opt_inject (15 samples, 0.04%)</title><rect x="737.0" y="101" width="0.4" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="739.95" y="111.5" ></text>
</g>
<g >
<title>Array.idx (12 samples, 0.03%)</title><rect x="586.5" y="101" width="0.4" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="589.54" y="111.5" ></text>
</g>
<g >
<title>trans_state6 (26 samples, 0.07%)</title><rect x="626.4" y="165" width="0.8" height="15.0" fill="rgb(240,158,38)" rx="2" ry="2" />
<text  x="629.40" y="175.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (22 samples, 0.06%)</title><rect x="508.0" y="117" width="0.7" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="511.04" y="127.5" ></text>
</g>
<g >
<title>to_4_tuple (63 samples, 0.16%)</title><rect x="746.0" y="117" width="1.9" height="15.0" fill="rgb(240,141,39)" rx="2" ry="2" />
<text  x="749.03" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_array::hc26f6095cf0cce29 (61 samples, 0.15%)</title><rect x="525.4" y="53" width="1.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="528.37" y="63.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (88 samples, 0.22%)</title><rect x="431.4" y="101" width="2.6" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="434.41" y="111.5" ></text>
</g>
<g >
<title>memcpy (72 samples, 0.18%)</title><rect x="711.5" y="117" width="2.1" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="714.46" y="127.5" ></text>
</g>
<g >
<title>opt_project (135 samples, 0.34%)</title><rect x="555.0" y="85" width="4.0" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="558.02" y="95.5" ></text>
</g>
<g >
<title>utf8_validate (188 samples, 0.47%)</title><rect x="675.5" y="133" width="5.5" height="15.0" fill="rgb(245,124,45)" rx="2" ry="2" />
<text  x="678.46" y="143.5" ></text>
</g>
<g >
<title>RBTree (668 samples, 1.68%)</title><rect x="275.9" y="149" width="19.8" height="15.0" fill="rgb(246,213,46)" rx="2" ry="2" />
<text  x="278.89" y="159.5" ></text>
</g>
<g >
<title>$lambda (1,179 samples, 2.97%)</title><rect x="629.1" y="165" width="35.0" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="632.13" y="175.5" >$l..</text>
</g>
<g >
<title>text_of_ptr_size (161 samples, 0.40%)</title><rect x="768.4" y="133" width="4.8" height="15.0" fill="rgb(245,171,44)" rx="2" ry="2" />
<text  x="771.44" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (11 samples, 0.03%)</title><rect x="365.7" y="117" width="0.4" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="368.73" y="127.5" ></text>
</g>
<g >
<title>@serialize_go&lt;B&gt; (102 samples, 0.26%)</title><rect x="633.6" y="117" width="3.0" height="15.0" fill="rgb(251,156,51)" rx="2" ry="2" />
<text  x="636.61" y="127.5" ></text>
</g>
<g >
<title>to_4_tuple (63 samples, 0.16%)</title><rect x="740.8" y="101" width="1.9" height="15.0" fill="rgb(240,141,39)" rx="2" ry="2" />
<text  x="743.78" y="111.5" ></text>
</g>
<g >
<title>alloc_words (462 samples, 1.16%)</title><rect x="282.0" y="133" width="13.7" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="285.01" y="143.5" ></text>
</g>
<g >
<title>obj_idx&lt;0&gt; (17 samples, 0.04%)</title><rect x="366.1" y="149" width="0.5" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="369.06" y="159.5" ></text>
</g>
<g >
<title>compute_crc32 (33 samples, 0.08%)</title><rect x="347.0" y="117" width="1.0" height="15.0" fill="rgb(245,149,44)" rx="2" ry="2" />
<text  x="350.00" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (11 samples, 0.03%)</title><rect x="772.9" y="101" width="0.3" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="775.89" y="111.5" ></text>
</g>
<g >
<title>can_tag_i64 (8 samples, 0.02%)</title><rect x="527.7" y="69" width="0.3" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="530.72" y="79.5" ></text>
</g>
<g >
<title>Array.idx_bigint (24 samples, 0.06%)</title><rect x="590.8" y="85" width="0.8" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="593.84" y="95.5" ></text>
</g>
<g >
<title>iterate (2,470 samples, 6.21%)</title><rect x="508.7" y="133" width="73.3" height="15.0" fill="rgb(245,143,45)" rx="2" ry="2" />
<text  x="511.69" y="143.5" >iterate</text>
</g>
<g >
<title>$lambda (366 samples, 0.92%)</title><rect x="630.6" y="149" width="10.9" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="633.61" y="159.5" ></text>
</g>
<g >
<title>sleb128_decode (84 samples, 0.21%)</title><rect x="692.1" y="133" width="2.5" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="695.14" y="143.5" ></text>
</g>
<g >
<title>memcmp (95 samples, 0.24%)</title><rect x="658.3" y="53" width="2.8" height="15.0" fill="rgb(238,144,36)" rx="2" ry="2" />
<text  x="661.27" y="63.5" ></text>
</g>
<g >
<title>anon-func-31.67 (12 samples, 0.03%)</title><rect x="533.4" y="101" width="0.4" height="15.0" fill="rgb(228,164,25)" rx="2" ry="2" />
<text  x="536.42" y="111.5" ></text>
</g>
<g >
<title>from_2_tuple (6 samples, 0.02%)</title><rect x="729.4" y="117" width="0.2" height="15.0" fill="rgb(240,184,39)" rx="2" ry="2" />
<text  x="732.41" y="127.5" ></text>
</g>
<g >
<title>Array.idx (96 samples, 0.24%)</title><rect x="522.5" y="69" width="2.8" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="525.46" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::compacting_gc::h9969ef320ad8170a (8,850 samples, 22.26%)</title><rect x="10.5" y="149" width="262.7" height="15.0" fill="rgb(233,127,31)" rx="2" ry="2" />
<text  x="13.50" y="159.5" >motoko_rts::gc::mark_compact::compa..</text>
</g>
<g >
<title>leb128_decode (134 samples, 0.34%)</title><rect x="687.8" y="133" width="4.0" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="690.83" y="143.5" ></text>
</g>
<g >
<title>$lambda (1,536 samples, 3.86%)</title><rect x="702.3" y="165" width="45.6" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="705.32" y="175.5" >$lam..</text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_object::h39958a57bed03610 (909 samples, 2.29%)</title><rect x="220.8" y="133" width="27.0" height="15.0" fill="rgb(231,127,29)" rx="2" ry="2" />
<text  x="223.84" y="143.5" >m..</text>
</g>
<g >
<title>Buffer (1,956 samples, 4.92%)</title><rect x="448.1" y="133" width="58.1" height="15.0" fill="rgb(241,127,40)" rx="2" ry="2" />
<text  x="451.15" y="143.5" >Buffer</text>
</g>
<g >
<title>can_tag_i64 (8 samples, 0.02%)</title><rect x="513.0" y="101" width="0.3" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="516.03" y="111.5" ></text>
</g>
<g >
<title>leb128_decode (134 samples, 0.34%)</title><rect x="791.6" y="133" width="3.9" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="794.56" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::text::blob_of_text::hb67d1f9b264b10a3 (20 samples, 0.05%)</title><rect x="362.3" y="133" width="0.6" height="15.0" fill="rgb(243,127,42)" rx="2" ry="2" />
<text  x="365.35" y="143.5" ></text>
</g>
<g >
<title>anon-func-116.7 (31 samples, 0.08%)</title><rect x="590.6" y="101" width="1.0" height="15.0" fill="rgb(239,164,38)" rx="2" ry="2" />
<text  x="593.64" y="111.5" ></text>
</g>
<g >
<title>memcmp (179 samples, 0.45%)</title><rect x="325.4" y="133" width="5.3" height="15.0" fill="rgb(238,144,36)" rx="2" ry="2" />
<text  x="328.40" y="143.5" ></text>
</g>
<g >
<title>trans_state6 (13 samples, 0.03%)</title><rect x="700.2" y="165" width="0.3" height="15.0" fill="rgb(240,158,38)" rx="2" ry="2" />
<text  x="703.15" y="175.5" ></text>
</g>
<g >
<title>core::str::converts::from_utf8::h0327f3338fa34684 (188 samples, 0.47%)</title><rect x="774.0" y="117" width="5.6" height="15.0" fill="rgb(246,133,45)" rx="2" ry="2" />
<text  x="776.99" y="127.5" ></text>
</g>
<g >
<title>opt_project (15 samples, 0.04%)</title><rect x="581.6" y="117" width="0.4" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="584.55" y="127.5" ></text>
</g>
<g >
<title>to_2_tuple (627 samples, 1.58%)</title><rect x="559.0" y="85" width="18.6" height="15.0" fill="rgb(240,141,39)" rx="2" ry="2" />
<text  x="562.03" y="95.5" ></text>
</g>
<g >
<title>@buffer_size&lt;t&gt; (37 samples, 0.09%)</title><rect x="398.5" y="101" width="1.1" height="15.0" fill="rgb(244,118,43)" rx="2" ry="2" />
<text  x="401.50" y="111.5" ></text>
</g>
<g >
<title>iter (606 samples, 1.52%)</title><rect x="420.3" y="133" width="18.0" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="423.31" y="143.5" ></text>
</g>
<g >
<title>sleb128_decode (168 samples, 0.42%)</title><rect x="808.3" y="149" width="5.0" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="811.33" y="159.5" ></text>
</g>
<g >
<title>Array_init (293 samples, 0.74%)</title><rect x="518.5" y="85" width="8.7" height="15.0" fill="rgb(236,150,34)" rx="2" ry="2" />
<text  x="521.49" y="95.5" ></text>
</g>
<g >
<title>text_size (4 samples, 0.01%)</title><rect x="403.3" y="85" width="0.1" height="15.0" fill="rgb(245,171,44)" rx="2" ry="2" />
<text  x="406.27" y="95.5" ></text>
</g>
<g >
<title>alloc_words (1,344 samples, 3.38%)</title><rect x="466.3" y="117" width="39.9" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="469.31" y="127.5" >all..</text>
</g>
<g >
<title>retrieve (2,459 samples, 6.18%)</title><rect x="627.9" y="181" width="73.0" height="15.0" fill="rgb(240,162,39)" rx="2" ry="2" />
<text  x="630.94" y="191.5" >retrieve</text>
</g>
<g >
<title>memset (104 samples, 0.26%)</title><rect x="200.3" y="133" width="3.1" height="15.0" fill="rgb(237,144,35)" rx="2" ry="2" />
<text  x="203.33" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (11 samples, 0.03%)</title><rect x="756.3" y="117" width="0.4" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="759.33" y="127.5" ></text>
</g>
<g >
<title>Array.idx (12 samples, 0.03%)</title><rect x="518.1" y="69" width="0.4" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="521.13" y="79.5" ></text>
</g>
<g >
<title>link_start (709 samples, 1.78%)</title><rect x="368.0" y="181" width="21.1" height="15.0" fill="rgb(239,129,37)" rx="2" ry="2" />
<text  x="371.02" y="191.5" ></text>
</g>
<g >
<title>obj_idx&lt;0&gt; (17 samples, 0.04%)</title><rect x="529.1" y="101" width="0.5" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="532.08" y="111.5" ></text>
</g>
<g >
<title>trans_state3 (11 samples, 0.03%)</title><rect x="367.0" y="165" width="0.3" height="15.0" fill="rgb(245,158,44)" rx="2" ry="2" />
<text  x="370.01" y="175.5" ></text>
</g>
<g >
<title>reply_with_data (4 samples, 0.01%)</title><rect x="713.6" y="133" width="0.1" height="15.0" fill="rgb(235,175,33)" rx="2" ry="2" />
<text  x="716.60" y="143.5" ></text>
</g>
<g >
<title>link_start (41 samples, 0.10%)</title><rect x="387.8" y="165" width="1.3" height="15.0" fill="rgb(239,129,37)" rx="2" ry="2" />
<text  x="390.84" y="175.5" ></text>
</g>
<g >
<title>alloc_blob (200 samples, 0.50%)</title><rect x="407.0" y="117" width="5.9" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="410.01" y="127.5" ></text>
</g>
<g >
<title>__wasm_apply_data_relocs (665 samples, 1.67%)</title><rect x="368.1" y="149" width="19.7" height="15.0" fill="rgb(244,119,43)" rx="2" ry="2" />
<text  x="371.10" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (121 samples, 0.30%)</title><rect x="292.1" y="117" width="3.6" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="295.13" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_array::hc26f6095cf0cce29 (122 samples, 0.31%)</title><rect x="587.0" y="85" width="3.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="590.02" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (11 samples, 0.03%)</title><rect x="716.3" y="133" width="0.3" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="719.27" y="143.5" ></text>
</g>
<g >
<title>trans_state4 (23 samples, 0.06%)</title><rect x="367.3" y="165" width="0.7" height="15.0" fill="rgb(243,158,42)" rx="2" ry="2" />
<text  x="370.33" y="175.5" ></text>
</g>
<g >
<title>next (1,700 samples, 4.28%)</title><rect x="529.6" y="117" width="50.4" height="15.0" fill="rgb(230,219,27)" rx="2" ry="2" />
<text  x="532.59" y="127.5" >next</text>
</g>
<g >
<title>@serialize&lt;&gt; (253 samples, 0.64%)</title><rect x="706.1" y="133" width="7.5" height="15.0" fill="rgb(242,156,41)" rx="2" ry="2" />
<text  x="709.09" y="143.5" ></text>
</g>
<g >
<title>obj_idx&lt;0&gt; (51 samples, 0.13%)</title><rect x="580.0" y="117" width="1.6" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="583.04" y="127.5" ></text>
</g>
<g >
<title>trans_state7 (26 samples, 0.07%)</title><rect x="627.2" y="165" width="0.7" height="15.0" fill="rgb(238,158,36)" rx="2" ry="2" />
<text  x="630.17" y="175.5" ></text>
</g>
<g >
<title>compacting_gc (12,554 samples, 31.58%)</title><rect x="816.3" y="165" width="372.6" height="15.0" fill="rgb(227,149,24)" rx="2" ry="2" />
<text  x="819.34" y="175.5" >compacting_gc</text>
</g>
<g >
<title>B_ge (11 samples, 0.03%)</title><rect x="528.3" y="85" width="0.3" height="15.0" fill="rgb(241,124,39)" rx="2" ry="2" />
<text  x="531.25" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (22 samples, 0.06%)</title><rect x="332.1" y="133" width="0.7" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="335.13" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (11 samples, 0.03%)</title><rect x="699.8" y="149" width="0.4" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="702.82" y="159.5" ></text>
</g>
<g >
<title>parse_idl_header (391 samples, 0.98%)</title><rect x="683.0" y="149" width="11.6" height="15.0" fill="rgb(243,149,41)" rx="2" ry="2" />
<text  x="686.03" y="159.5" ></text>
</g>
<g >
<title>$lambda (262 samples, 0.66%)</title><rect x="705.9" y="149" width="7.8" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="708.94" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (22 samples, 0.06%)</title><rect x="625.7" y="149" width="0.7" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="628.75" y="159.5" ></text>
</g>
<g >
<title>text_compare (277 samples, 0.70%)</title><rect x="653.7" y="85" width="8.2" height="15.0" fill="rgb(248,171,47)" rx="2" ry="2" />
<text  x="656.70" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (11 samples, 0.03%)</title><rect x="816.0" y="149" width="0.3" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="819.02" y="159.5" ></text>
</g>
<g >
<title>canister_self (60 samples, 0.15%)</title><rect x="364.3" y="149" width="1.8" height="15.0" fill="rgb(238,106,36)" rx="2" ry="2" />
<text  x="367.28" y="159.5" ></text>
</g>
<g >
<title>@serialize_go&lt;t&gt; (129 samples, 0.32%)</title><rect x="402.1" y="101" width="3.8" height="15.0" fill="rgb(244,156,43)" rx="2" ry="2" />
<text  x="405.12" y="111.5" ></text>
</g>
<g >
<title>alloc_blob (100 samples, 0.25%)</title><rect x="623.4" y="165" width="3.0" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="626.43" y="175.5" ></text>
</g>
<g >
<title>to_2_tuple (114 samples, 0.29%)</title><rect x="737.4" y="101" width="3.4" height="15.0" fill="rgb(240,141,39)" rx="2" ry="2" />
<text  x="740.40" y="111.5" ></text>
</g>
<g >
<title>sleb128_decode (84 samples, 0.21%)</title><rect x="694.6" y="149" width="2.5" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="697.63" y="159.5" ></text>
</g>
<g >
<title>next (1,478 samples, 3.72%)</title><rect x="533.8" y="101" width="43.8" height="15.0" fill="rgb(230,219,27)" rx="2" ry="2" />
<text  x="536.77" y="111.5" >next</text>
</g>
<g >
<title>leb128_decode (67 samples, 0.17%)</title><rect x="756.7" y="133" width="1.9" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="759.66" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (44 samples, 0.11%)</title><rect x="411.6" y="101" width="1.3" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="414.64" y="111.5" ></text>
</g>
<g >
<title>@reset_refund (10 samples, 0.03%)</title><rect x="623.1" y="165" width="0.3" height="15.0" fill="rgb(248,161,48)" rx="2" ry="2" />
<text  x="626.13" y="175.5" ></text>
</g>
<g >
<title>opt_inject (15 samples, 0.04%)</title><rect x="579.2" y="101" width="0.4" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="582.15" y="111.5" ></text>
</g>
<g >
<title>reply_with_data (8 samples, 0.02%)</title><rect x="416.5" y="133" width="0.2" height="15.0" fill="rgb(235,175,33)" rx="2" ry="2" />
<text  x="419.45" y="143.5" ></text>
</g>
<g >
<title>alloc_words (42 samples, 0.11%)</title><rect x="746.7" y="101" width="1.2" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="749.66" y="111.5" ></text>
</g>
<g >
<title>alloc_blob (100 samples, 0.25%)</title><rect x="636.6" y="117" width="3.0" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="639.64" y="127.5" ></text>
</g>
<g >
<title>alloc_words (168 samples, 0.42%)</title><rect x="440.3" y="133" width="5.0" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="443.31" y="143.5" ></text>
</g>
<g >
<title>alloc_words (462 samples, 1.16%)</title><rect x="563.9" y="69" width="13.7" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="566.93" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (22 samples, 0.06%)</title><rect x="639.0" y="101" width="0.6" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="641.95" y="111.5" ></text>
</g>
<g >
<title>canister_init (12,063 samples, 30.34%)</title><rect x="10.0" y="181" width="358.0" height="15.0" fill="rgb(236,106,34)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >canister_init</text>
</g>
<g >
<title>memcpy (60 samples, 0.15%)</title><rect x="404.2" y="69" width="1.7" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="407.16" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::text::text_compare_range::h5b657a34bda6af06 (237 samples, 0.60%)</title><rect x="646.5" y="69" width="7.1" height="15.0" fill="rgb(239,127,37)" rx="2" ry="2" />
<text  x="649.52" y="79.5" ></text>
</g>
<g >
<title>leb128_decode (134 samples, 0.34%)</title><rect x="601.8" y="149" width="3.9" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="604.77" y="159.5" ></text>
</g>
<g >
<title>alloc_array (126 samples, 0.32%)</title><rect x="586.9" y="101" width="3.7" height="15.0" fill="rgb(239,128,37)" rx="2" ry="2" />
<text  x="589.90" y="111.5" ></text>
</g>
<g >
<title>leb128_decode (67 samples, 0.17%)</title><rect x="669.6" y="133" width="2.0" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="672.58" y="143.5" ></text>
</g>
<g >
<title>Array.idx_bigint (24 samples, 0.06%)</title><rect x="517.8" y="85" width="0.7" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="520.77" y="95.5" ></text>
</g>
<g >
<title>core::str::converts::from_utf8::h0327f3338fa34684 (162 samples, 0.41%)</title><rect x="676.2" y="117" width="4.8" height="15.0" fill="rgb(246,133,45)" rx="2" ry="2" />
<text  x="679.23" y="127.5" ></text>
</g>
<g >
<title>memcmp (95 samples, 0.24%)</title><rect x="649.9" y="53" width="2.8" height="15.0" fill="rgb(238,144,36)" rx="2" ry="2" />
<text  x="652.90" y="63.5" ></text>
</g>
<g >
<title>Array.idx (12 samples, 0.03%)</title><rect x="591.2" y="69" width="0.4" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="594.20" y="79.5" ></text>
</g>
<g >
<title>alloc_words (42 samples, 0.11%)</title><rect x="698.9" y="165" width="1.3" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="701.90" y="175.5" ></text>
</g>
<g >
<title>motoko_rts::principal_id::enc_stash::h86c1115b3233794f (372 samples, 0.94%)</title><rect x="348.6" y="117" width="11.1" height="15.0" fill="rgb(236,127,34)" rx="2" ry="2" />
<text  x="351.64" y="127.5" ></text>
</g>
<g >
<title>@deserialize&lt;&gt; (970 samples, 2.44%)</title><rect x="594.0" y="165" width="28.8" height="15.0" fill="rgb(242,176,41)" rx="2" ry="2" />
<text  x="597.05" y="175.5" >@d..</text>
</g>
<g >
<title>@serialize&lt;vt&gt; (827 samples, 2.08%)</title><rect x="391.9" y="133" width="24.6" height="15.0" fill="rgb(237,156,36)" rx="2" ry="2" />
<text  x="394.91" y="143.5" >@..</text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (352 samples, 0.89%)</title><rect x="495.8" y="101" width="10.4" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="498.75" y="111.5" ></text>
</g>
<g >
<title>alloc_blob (50 samples, 0.13%)</title><rect x="755.2" y="133" width="1.5" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="758.18" y="143.5" ></text>
</g>
<g >
<title>@deserialize_go&lt;t&gt; (421 samples, 1.06%)</title><rect x="668.5" y="149" width="12.5" height="15.0" fill="rgb(244,176,43)" rx="2" ry="2" />
<text  x="671.54" y="159.5" ></text>
</g>
<g >
<title>@reset_cycles (5 samples, 0.01%)</title><rect x="697.1" y="165" width="0.2" height="15.0" fill="rgb(244,161,43)" rx="2" ry="2" />
<text  x="700.12" y="175.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (33 samples, 0.08%)</title><rect x="552.3" y="69" width="0.9" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="555.26" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::principal_id::principal_of_blob::h19b0b0b79fd3c586 (996 samples, 2.51%)</title><rect x="332.8" y="133" width="29.5" height="15.0" fill="rgb(243,127,42)" rx="2" ry="2" />
<text  x="335.79" y="143.5" >mo..</text>
</g>
<g >
<title>init (22 samples, 0.06%)</title><rect x="388.4" y="133" width="0.7" height="15.0" fill="rgb(236,161,34)" rx="2" ry="2" />
<text  x="391.40" y="143.5" ></text>
</g>
<g >
<title>alloc_words (84 samples, 0.21%)</title><rect x="506.2" y="133" width="2.5" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="509.20" y="143.5" ></text>
</g>
<g >
<title>compare (625 samples, 1.57%)</title><rect x="644.6" y="117" width="18.6" height="15.0" fill="rgb(248,149,47)" rx="2" ry="2" />
<text  x="647.62" y="127.5" ></text>
</g>
<g >
<title>@buffer_size&lt;u&gt; (14 samples, 0.04%)</title><rect x="708.0" y="117" width="0.4" height="15.0" fill="rgb(243,118,42)" rx="2" ry="2" />
<text  x="710.96" y="127.5" ></text>
</g>
<g >
<title>alloc_array (63 samples, 0.16%)</title><rect x="525.3" y="69" width="1.9" height="15.0" fill="rgb(239,128,37)" rx="2" ry="2" />
<text  x="528.31" y="79.5" ></text>
</g>
<g >
<title>obj_idx&lt;1&gt; (17 samples, 0.04%)</title><rect x="723.3" y="149" width="0.5" height="15.0" fill="rgb(246,139,45)" rx="2" ry="2" />
<text  x="726.33" y="159.5" ></text>
</g>
<g >
<title>insertRec (440 samples, 1.11%)</title><rect x="729.6" y="117" width="13.1" height="15.0" fill="rgb(230,167,27)" rx="2" ry="2" />
<text  x="732.59" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (11 samples, 0.03%)</title><rect x="814.8" y="149" width="0.3" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="817.77" y="159.5" ></text>
</g>
<g >
<title>to_2_tuple (114 samples, 0.29%)</title><rect x="434.9" y="117" width="3.4" height="15.0" fill="rgb(240,141,39)" rx="2" ry="2" />
<text  x="437.91" y="127.5" ></text>
</g>
<g >
<title>Array_tabulate (238 samples, 0.60%)</title><rect x="584.5" y="117" width="7.1" height="15.0" fill="rgb(245,150,45)" rx="2" ry="2" />
<text  x="587.49" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::text::text_get_range::h4d5b3d59f2df56d2 (28 samples, 0.07%)</title><rect x="661.1" y="53" width="0.8" height="15.0" fill="rgb(249,127,49)" rx="2" ry="2" />
<text  x="664.09" y="63.5" ></text>
</g>
<g >
<title>@buffer_size&lt;vt&gt; (145 samples, 0.36%)</title><rect x="395.6" y="117" width="4.3" height="15.0" fill="rgb(237,118,36)" rx="2" ry="2" />
<text  x="398.65" y="127.5" ></text>
</g>
<g >
<title>leb128_encode (12 samples, 0.03%)</title><rect x="402.9" y="85" width="0.4" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="405.92" y="95.5" ></text>
</g>
<g >
<title>text_compare (277 samples, 0.70%)</title><rect x="645.3" y="85" width="8.3" height="15.0" fill="rgb(248,171,47)" rx="2" ry="2" />
<text  x="648.33" y="95.5" ></text>
</g>
<g >
<title>memcpy (90 samples, 0.23%)</title><rect x="768.7" y="117" width="2.7" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="771.74" y="127.5" ></text>
</g>
<g >
<title>toArray (372 samples, 0.94%)</title><rect x="583.0" y="133" width="11.0" height="15.0" fill="rgb(239,160,37)" rx="2" ry="2" />
<text  x="586.01" y="143.5" ></text>
</g>
<g >
<title>alloc_words (42 samples, 0.11%)</title><rect x="516.5" y="69" width="1.3" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="519.53" y="79.5" ></text>
</g>
<g >
<title>rts_start (27 samples, 0.07%)</title><rect x="388.3" y="149" width="0.8" height="15.0" fill="rgb(239,145,37)" rx="2" ry="2" />
<text  x="391.26" y="159.5" ></text>
</g>
<g >
<title>alloc_words (42 samples, 0.11%)</title><rect x="741.4" y="85" width="1.3" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="744.40" y="95.5" ></text>
</g>
<g >
<title>compacting_gc (8,863 samples, 22.29%)</title><rect x="10.1" y="165" width="263.1" height="15.0" fill="rgb(227,149,24)" rx="2" ry="2" />
<text  x="13.12" y="175.5" >compacting_gc</text>
</g>
<g >
<title>@reset_refund (5 samples, 0.01%)</title><rect x="813.5" y="165" width="0.1" height="15.0" fill="rgb(248,161,48)" rx="2" ry="2" />
<text  x="816.46" y="175.5" ></text>
</g>
<g >
<title>getRec (719 samples, 1.81%)</title><rect x="641.8" y="133" width="21.4" height="15.0" fill="rgb(230,170,27)" rx="2" ry="2" />
<text  x="644.83" y="143.5" >g..</text>
</g>
<g >
<title>B_add (26 samples, 0.07%)</title><rect x="527.2" y="85" width="0.8" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="530.18" y="95.5" ></text>
</g>
<g >
<title>leb128_decode (67 samples, 0.17%)</title><rect x="681.0" y="149" width="2.0" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="684.04" y="159.5" ></text>
</g>
<g >
<title>reply_with_data (4 samples, 0.01%)</title><rect x="641.4" y="133" width="0.1" height="15.0" fill="rgb(235,175,33)" rx="2" ry="2" />
<text  x="644.36" y="143.5" ></text>
</g>
<g >
<title>text_to_buf (86 samples, 0.22%)</title><rect x="403.4" y="85" width="2.5" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="406.39" y="95.5" ></text>
</g>
<g >
<title>alloc_words (84 samples, 0.21%)</title><rect x="435.8" y="101" width="2.5" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="438.80" y="111.5" ></text>
</g>
<g >
<title>trans_state5 (13 samples, 0.03%)</title><rect x="1189.6" y="165" width="0.4" height="15.0" fill="rgb(241,158,40)" rx="2" ry="2" />
<text  x="1192.61" y="175.5" ></text>
</g>
<g >
<title>memcpy (1,050 samples, 2.64%)</title><rect x="169.2" y="133" width="31.1" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="172.17" y="143.5" >me..</text>
</g>
<g >
<title>opt_inject (30 samples, 0.08%)</title><rect x="434.0" y="117" width="0.9" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="437.02" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (11 samples, 0.03%)</title><rect x="517.4" y="53" width="0.4" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="520.45" y="63.5" ></text>
</g>
<g >
<title>obj_idx&lt;11&gt; (34 samples, 0.09%)</title><rect x="582.0" y="133" width="1.0" height="15.0" fill="rgb(245,139,44)" rx="2" ry="2" />
<text  x="585.00" y="143.5" ></text>
</g>
<g >
<title>Array.idx (12 samples, 0.03%)</title><rect x="399.6" y="101" width="0.3" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="402.59" y="111.5" ></text>
</g>
<g >
<title>sleb128_decode (420 samples, 1.06%)</title><rect x="795.9" y="133" width="12.4" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="798.87" y="143.5" ></text>
</g>
<g >
<title>alloc_words (168 samples, 0.42%)</title><rect x="731.8" y="101" width="5.0" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="734.79" y="111.5" ></text>
</g>
<g >
<title>alloc_words (210 samples, 0.53%)</title><rect x="716.6" y="149" width="6.2" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="719.59" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (44 samples, 0.11%)</title><rect x="735.5" y="85" width="1.3" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="738.47" y="95.5" ></text>
</g>
<g >
<title>leb128_decode (67 samples, 0.17%)</title><rect x="779.6" y="149" width="2.0" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="782.57" y="159.5" ></text>
</g>
<g >
<title>to_2_tuple (114 samples, 0.29%)</title><rect x="742.7" y="117" width="3.3" height="15.0" fill="rgb(240,141,39)" rx="2" ry="2" />
<text  x="745.65" y="127.5" ></text>
</g>
<g >
<title>entries (728 samples, 1.83%)</title><rect x="416.7" y="149" width="21.6" height="15.0" fill="rgb(237,196,36)" rx="2" ry="2" />
<text  x="419.69" y="159.5" >e..</text>
</g>
<g >
<title>obj_idx&lt;6&gt; (34 samples, 0.09%)</title><rect x="445.3" y="149" width="1.0" height="15.0" fill="rgb(240,139,39)" rx="2" ry="2" />
<text  x="448.30" y="159.5" ></text>
</g>
<g >
<title>@deserialize&lt;tB&gt; (2,204 samples, 5.54%)</title><rect x="747.9" y="165" width="65.4" height="15.0" fill="rgb(245,176,45)" rx="2" ry="2" />
<text  x="750.90" y="175.5" >@deseri..</text>
</g>
<g >
<title>sleb128_decode (168 samples, 0.42%)</title><rect x="760.4" y="133" width="5.0" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="763.43" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (11 samples, 0.03%)</title><rect x="691.8" y="133" width="0.3" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="694.81" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (22 samples, 0.06%)</title><rect x="745.4" y="85" width="0.6" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="748.38" y="95.5" ></text>
</g>
<g >
<title>$lambda (6,863 samples, 17.26%)</title><rect x="390.4" y="165" width="203.6" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="393.36" y="175.5" >$lambda</text>
</g>
<g >
<title>alloc_words (42 samples, 0.11%)</title><rect x="815.1" y="165" width="1.2" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="818.10" y="175.5" ></text>
</g>
<g >
<title>opt_project (15 samples, 0.04%)</title><rect x="663.7" y="149" width="0.4" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="666.68" y="159.5" ></text>
</g>
<g >
<title>alloc_words (336 samples, 0.85%)</title><rect x="424.0" y="117" width="10.0" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="427.05" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::types::object_size::hffe0d46c6a12bb07 (1,280 samples, 3.22%)</title><rect x="1150.9" y="133" width="38.0" height="15.0" fill="rgb(240,127,39)" rx="2" ry="2" />
<text  x="1153.94" y="143.5" >mot..</text>
</g>
<g >
<title>@deserialize_go&lt;t&gt; (477 samples, 1.20%)</title><rect x="765.4" y="149" width="14.2" height="15.0" fill="rgb(244,176,43)" rx="2" ry="2" />
<text  x="768.41" y="159.5" ></text>
</g>
<g >
<title>add (522 samples, 1.31%)</title><rect x="513.6" y="101" width="15.5" height="15.0" fill="rgb(253,156,53)" rx="2" ry="2" />
<text  x="516.59" y="111.5" ></text>
</g>
<g >
<title>alloc_words (84 samples, 0.21%)</title><rect x="743.5" y="101" width="2.5" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="746.54" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_object::h39958a57bed03610 (1,308 samples, 3.29%)</title><rect x="1111.5" y="133" width="38.8" height="15.0" fill="rgb(231,127,29)" rx="2" ry="2" />
<text  x="1114.47" y="143.5" >mot..</text>
</g>
<g >
<title>blob_of_principal (2,176 samples, 5.47%)</title><rect x="299.7" y="149" width="64.6" height="15.0" fill="rgb(228,110,25)" rx="2" ry="2" />
<text  x="302.69" y="159.5" >blob_of..</text>
</g>
<g >
<title>memcpy (60 samples, 0.15%)</title><rect x="671.9" y="117" width="1.7" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="674.87" y="127.5" ></text>
</g>
<g >
<title>trans_state4 (23 samples, 0.06%)</title><rect x="1188.9" y="165" width="0.7" height="15.0" fill="rgb(243,158,42)" rx="2" ry="2" />
<text  x="1191.93" y="175.5" ></text>
</g>
<g >
<title>alloc_words (84 samples, 0.21%)</title><rect x="297.2" y="149" width="2.5" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="300.20" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (11 samples, 0.03%)</title><rect x="795.5" y="133" width="0.4" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="798.54" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (22 samples, 0.06%)</title><rect x="299.0" y="133" width="0.7" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="302.04" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (44 samples, 0.11%)</title><rect x="444.0" y="117" width="1.3" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="446.99" y="127.5" ></text>
</g>
<g >
<title>parse_idl_header (576 samples, 1.45%)</title><rect x="605.7" y="149" width="17.1" height="15.0" fill="rgb(243,149,41)" rx="2" ry="2" />
<text  x="608.74" y="159.5" ></text>
</g>
<g >
<title>memcpy (1,380 samples, 3.47%)</title><rect x="1041.3" y="133" width="41.0" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="1044.34" y="143.5" >mem..</text>
</g>
<g >
<title>alloc_blob (50 samples, 0.13%)</title><rect x="364.6" y="133" width="1.5" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="367.57" y="143.5" ></text>
</g>
<g >
<title>anon-func-165.17 (550 samples, 1.38%)</title><rect x="513.3" y="117" width="16.3" height="15.0" fill="rgb(233,164,31)" rx="2" ry="2" />
<text  x="516.26" y="127.5" ></text>
</g>
<g >
<title>alloc_blob (50 samples, 0.13%)</title><rect x="813.6" y="165" width="1.5" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="816.61" y="175.5" ></text>
</g>
<g >
<title>@buffer_size&lt;B&gt; (33 samples, 0.08%)</title><rect x="632.6" y="117" width="1.0" height="15.0" fill="rgb(251,118,51)" rx="2" ry="2" />
<text  x="635.63" y="127.5" ></text>
</g>
<g >
<title>init (3,162 samples, 7.95%)</title><rect x="273.2" y="165" width="93.8" height="15.0" fill="rgb(236,161,34)" rx="2" ry="2" />
<text  x="276.16" y="175.5" >init</text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (121 samples, 0.30%)</title><rect x="574.0" y="53" width="3.6" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="577.05" y="63.5" ></text>
</g>
<g >
<title>motoko_rts::types::Blob::shrink::h84725381c5b693e5 (45 samples, 0.11%)</title><rect x="362.9" y="133" width="1.4" height="15.0" fill="rgb(245,127,44)" rx="2" ry="2" />
<text  x="365.94" y="143.5" ></text>
</g>
<g >
<title>from_2_tuple (6 samples, 0.02%)</title><rect x="533.6" y="85" width="0.2" height="15.0" fill="rgb(240,184,39)" rx="2" ry="2" />
<text  x="536.59" y="95.5" ></text>
</g>
<g >
<title>memset (104 samples, 0.26%)</title><rect x="1082.3" y="133" width="3.1" height="15.0" fill="rgb(237,144,35)" rx="2" ry="2" />
<text  x="1085.30" y="143.5" ></text>
</g>
<g >
<title>store (16,479 samples, 41.45%)</title><rect x="700.9" y="181" width="489.1" height="15.0" fill="rgb(246,150,45)" rx="2" ry="2" />
<text  x="703.92" y="191.5" >store</text>
</g>
<g >
<title>motoko_rts::types::Blob::shrink::h84725381c5b693e5 (90 samples, 0.23%)</title><rect x="359.7" y="117" width="2.6" height="15.0" fill="rgb(245,127,44)" rx="2" ry="2" />
<text  x="362.68" y="127.5" ></text>
</g>
<g >
<title>@serialize_go&lt;vt&gt; (238 samples, 0.60%)</title><rect x="399.9" y="117" width="7.1" height="15.0" fill="rgb(237,156,36)" rx="2" ry="2" />
<text  x="402.95" y="127.5" ></text>
</g>
<g >
<title>obj_idx&lt;0&gt; (17 samples, 0.04%)</title><rect x="722.8" y="149" width="0.5" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="725.83" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (11 samples, 0.03%)</title><rect x="675.1" y="101" width="0.4" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="678.13" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (22 samples, 0.06%)</title><rect x="1150.3" y="133" width="0.6" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="1153.29" y="143.5" ></text>
</g>
<g >
<title>opt_inject (15 samples, 0.04%)</title><rect x="366.6" y="149" width="0.4" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="369.56" y="159.5" ></text>
</g>
<g >
<title>Text.compare_eq (281 samples, 0.71%)</title><rect x="645.2" y="101" width="8.4" height="15.0" fill="rgb(239,187,38)" rx="2" ry="2" />
<text  x="648.22" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::ha0fb5d88a1efc6e7 (587 samples, 1.48%)</title><rect x="203.4" y="133" width="17.4" height="15.0" fill="rgb(239,127,38)" rx="2" ry="2" />
<text  x="206.42" y="143.5" ></text>
</g>
<g >
<title>@reset_cycles (5 samples, 0.01%)</title><rect x="813.3" y="165" width="0.2" height="15.0" fill="rgb(244,161,43)" rx="2" ry="2" />
<text  x="816.32" y="175.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (22 samples, 0.06%)</title><rect x="593.4" y="101" width="0.6" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="596.40" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::compacting_gc::h9969ef320ad8170a (12,541 samples, 31.54%)</title><rect x="816.7" y="149" width="372.2" height="15.0" fill="rgb(233,127,31)" rx="2" ry="2" />
<text  x="819.73" y="159.5" >motoko_rts::gc::mark_compact::compacting_gc::h9969..</text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::ha0fb5d88a1efc6e7 (879 samples, 2.21%)</title><rect x="1085.4" y="133" width="26.1" height="15.0" fill="rgb(239,127,38)" rx="2" ry="2" />
<text  x="1088.38" y="143.5" >m..</text>
</g>
<g >
<title>memcpy (60 samples, 0.15%)</title><rect x="758.6" y="133" width="1.8" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="761.65" y="143.5" ></text>
</g>
<g >
<title>alloc_words (126 samples, 0.32%)</title><rect x="549.5" y="85" width="3.7" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="552.50" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (22 samples, 0.06%)</title><rect x="419.7" y="117" width="0.6" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="422.66" y="127.5" ></text>
</g>
<g >
<title>B_gt (11 samples, 0.03%)</title><rect x="528.6" y="85" width="0.3" height="15.0" fill="rgb(232,124,30)" rx="2" ry="2" />
<text  x="531.58" y="95.5" ></text>
</g>
<g >
<title>@serialize_go&lt;u&gt; (4 samples, 0.01%)</title><rect x="708.4" y="117" width="0.1" height="15.0" fill="rgb(243,156,42)" rx="2" ry="2" />
<text  x="711.37" y="127.5" ></text>
</g>
<g >
<title>Blob.compare_eq (47 samples, 0.12%)</title><rect x="713.7" y="149" width="1.4" height="15.0" fill="rgb(239,126,38)" rx="2" ry="2" />
<text  x="716.71" y="159.5" ></text>
</g>
<g >
<title>parse_idl_header (902 samples, 2.27%)</title><rect x="781.6" y="149" width="26.7" height="15.0" fill="rgb(243,149,41)" rx="2" ry="2" />
<text  x="784.56" y="159.5" >p..</text>
</g>
<g >
<title>text_size (4 samples, 0.01%)</title><rect x="399.5" y="85" width="0.1" height="15.0" fill="rgb(245,171,44)" rx="2" ry="2" />
<text  x="402.48" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (11 samples, 0.03%)</title><rect x="662.8" y="85" width="0.4" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="665.84" y="95.5" ></text>
</g>
<g >
<title>alloc_blob (50 samples, 0.13%)</title><rect x="697.4" y="165" width="1.5" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="700.42" y="175.5" ></text>
</g>
<g >
<title>leb128_encode (12 samples, 0.03%)</title><rect x="634.5" y="101" width="0.4" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="637.50" y="111.5" ></text>
</g>
<g >
<title>from_2_tuple (6 samples, 0.02%)</title><rect x="736.8" y="101" width="0.2" height="15.0" fill="rgb(240,184,39)" rx="2" ry="2" />
<text  x="739.77" y="111.5" ></text>
</g>
<g >
<title>leb128_decode (268 samples, 0.67%)</title><rect x="614.2" y="133" width="8.0" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="617.23" y="143.5" ></text>
</g>
<g >
<title>alloc_words (84 samples, 0.21%)</title><rect x="591.6" y="117" width="2.4" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="594.56" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::text::alloc_text_blob::h409a4bc751dd6299 (61 samples, 0.15%)</title><rect x="771.4" y="117" width="1.8" height="15.0" fill="rgb(239,127,37)" rx="2" ry="2" />
<text  x="774.41" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (11 samples, 0.03%)</title><rect x="742.3" y="69" width="0.4" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="745.32" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::text::alloc_text_blob::h409a4bc751dd6299 (61 samples, 0.15%)</title><rect x="673.6" y="117" width="1.9" height="15.0" fill="rgb(239,127,37)" rx="2" ry="2" />
<text  x="676.65" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (55 samples, 0.14%)</title><rect x="721.2" y="133" width="1.6" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="724.19" y="143.5" ></text>
</g>
<g >
<title>leb128_encode (24 samples, 0.06%)</title><rect x="406.3" y="101" width="0.7" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="409.30" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (11 samples, 0.03%)</title><rect x="296.9" y="133" width="0.3" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="299.88" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (11 samples, 0.03%)</title><rect x="747.6" y="85" width="0.3" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="750.58" y="95.5" ></text>
</g>
<g >
<title>alloc_blob (50 samples, 0.13%)</title><rect x="715.1" y="149" width="1.5" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="718.11" y="159.5" ></text>
</g>
<g >
<title>B_eq (10 samples, 0.03%)</title><rect x="528.0" y="85" width="0.3" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="530.95" y="95.5" ></text>
</g>
<g >
<title>opt_inject (60 samples, 0.15%)</title><rect x="553.2" y="85" width="1.8" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="556.24" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (11 samples, 0.03%)</title><rect x="698.6" y="149" width="0.3" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="701.58" y="159.5" ></text>
</g>
<g >
<title>@reset_refund (5 samples, 0.01%)</title><rect x="697.3" y="165" width="0.1" height="15.0" fill="rgb(248,161,48)" rx="2" ry="2" />
<text  x="700.27" y="175.5" ></text>
</g>
<g >
<title>alloc_words (84 samples, 0.21%)</title><rect x="726.9" y="117" width="2.5" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="729.92" y="127.5" ></text>
</g>
<g >
<title>@reset_cycles (10 samples, 0.03%)</title><rect x="622.8" y="165" width="0.3" height="15.0" fill="rgb(244,161,43)" rx="2" ry="2" />
<text  x="625.84" y="175.5" ></text>
</g>
<g >
<title>trans_state7 (13 samples, 0.03%)</title><rect x="700.5" y="165" width="0.4" height="15.0" fill="rgb(238,158,36)" rx="2" ry="2" />
<text  x="703.54" y="175.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (22 samples, 0.06%)</title><rect x="710.8" y="101" width="0.7" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="713.81" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (22 samples, 0.06%)</title><rect x="590.0" y="69" width="0.6" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="592.98" y="79.5" ></text>
</g>
<g >
<title>alloc_blob (100 samples, 0.25%)</title><rect x="708.5" y="117" width="3.0" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="711.49" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (22 samples, 0.06%)</title><rect x="622.2" y="133" width="0.6" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="625.18" y="143.5" ></text>
</g>
<g >
<title>B_add (26 samples, 0.07%)</title><rect x="512.5" y="117" width="0.8" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="515.49" y="127.5" ></text>
</g>
<g >
<title>get (731 samples, 1.84%)</title><rect x="641.5" y="149" width="21.7" height="15.0" fill="rgb(237,170,35)" rx="2" ry="2" />
<text  x="644.48" y="159.5" >get</text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (22 samples, 0.06%)</title><rect x="247.8" y="133" width="0.7" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="250.82" y="143.5" ></text>
</g>
<g >
<title>utf8_validate (214 samples, 0.54%)</title><rect x="773.2" y="133" width="6.4" height="15.0" fill="rgb(245,124,45)" rx="2" ry="2" />
<text  x="776.22" y="143.5" ></text>
</g>
<g >
<title>alloc_words (84 samples, 0.21%)</title><rect x="417.8" y="133" width="2.5" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="420.82" y="143.5" ></text>
</g>
<g >
<title>@serialize&lt;B&gt; (357 samples, 0.90%)</title><rect x="630.8" y="133" width="10.6" height="15.0" fill="rgb(251,156,51)" rx="2" ry="2" />
<text  x="633.76" y="143.5" ></text>
</g>
<g >
<title>memcpy (48 samples, 0.12%)</title><rect x="330.7" y="133" width="1.4" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="333.71" y="143.5" ></text>
</g>
<g >
<title>map (236 samples, 0.59%)</title><rect x="438.3" y="149" width="7.0" height="15.0" fill="rgb(240,99,39)" rx="2" ry="2" />
<text  x="441.29" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::text::text_compare_range::h5b657a34bda6af06 (237 samples, 0.60%)</title><rect x="654.9" y="69" width="7.0" height="15.0" fill="rgb(239,127,37)" rx="2" ry="2" />
<text  x="657.89" y="79.5" ></text>
</g>
<g >
<title>leb128_decode (67 samples, 0.17%)</title><rect x="766.5" y="133" width="1.9" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="769.45" y="143.5" ></text>
</g>
<g >
<title>obj_idx&lt;0&gt; (51 samples, 0.13%)</title><rect x="577.6" y="101" width="1.6" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="580.64" y="111.5" ></text>
</g>
<g >
<title>Array.idx (12 samples, 0.03%)</title><rect x="405.9" y="101" width="0.4" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="408.95" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (11 samples, 0.03%)</title><rect x="526.9" y="37" width="0.3" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="529.86" y="47.5" ></text>
</g>
<g >
<title>motoko_rts::types::object_size::hffe0d46c6a12bb07 (832 samples, 2.09%)</title><rect x="248.5" y="133" width="24.7" height="15.0" fill="rgb(240,127,39)" rx="2" ry="2" />
<text  x="251.47" y="143.5" >m..</text>
</g>
<g >
<title>memcpy (118 samples, 0.30%)</title><rect x="412.9" y="117" width="3.6" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="415.95" y="127.5" ></text>
</g>
<g >
<title>toArray (4,978 samples, 12.52%)</title><rect x="446.3" y="149" width="147.7" height="15.0" fill="rgb(239,160,37)" rx="2" ry="2" />
<text  x="449.31" y="159.5" >toArray</text>
</g>
<g >
<title>alloc_blob (50 samples, 0.13%)</title><rect x="295.7" y="149" width="1.5" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="298.72" y="159.5" ></text>
</g>
<g >
<title>@deserialize_go&lt;B&gt; (420 samples, 1.06%)</title><rect x="752.9" y="149" width="12.5" height="15.0" fill="rgb(251,176,51)" rx="2" ry="2" />
<text  x="755.95" y="159.5" ></text>
</g>
<g >
<title>text_of_ptr_size (131 samples, 0.33%)</title><rect x="671.6" y="133" width="3.9" height="15.0" fill="rgb(245,171,44)" rx="2" ry="2" />
<text  x="674.57" y="143.5" ></text>
</g>
<g >
<title>$lambda (845 samples, 2.13%)</title><rect x="391.6" y="149" width="25.1" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="394.61" y="159.5" >$..</text>
</g>
<g >
<title>Text.compare_lt (282 samples, 0.71%)</title><rect x="653.6" y="101" width="8.3" height="15.0" fill="rgb(226,187,24)" rx="2" ry="2" />
<text  x="656.56" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h84512db052854759 (22 samples, 0.06%)</title><rect x="437.6" y="85" width="0.7" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="440.64" y="95.5" ></text>
</g>
<g >
<title>__wasm_call_ctors (666 samples, 1.68%)</title><rect x="368.1" y="165" width="19.7" height="15.0" fill="rgb(239,119,38)" rx="2" ry="2" />
<text  x="371.07" y="175.5" ></text>
</g>
<g >
<title>list (8,049 samples, 20.24%)</title><rect x="389.1" y="181" width="238.8" height="15.0" fill="rgb(232,113,30)" rx="2" ry="2" />
<text  x="392.06" y="191.5" >list</text>
</g>
</g>
</svg>
